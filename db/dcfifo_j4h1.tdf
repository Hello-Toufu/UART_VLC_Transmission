--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone IV E" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=512 LPM_SHOWAHEAD="OFF" LPM_WIDTH=32 LPM_WIDTH_R=8 LPM_WIDTHU=9 LPM_WIDTHU_R=11 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=4 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRSYNC_DELAYPIPE=4 aclr(gnd) data q rdclk rdfull rdreq rdusedw wrclk wrfull wrreq CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Cyclone IV E" LOW_POWER_MODE="AUTO" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 18.0 cbx_a_gray2bin 2018:04:24:18:04:18:SJ cbx_a_graycounter 2018:04:24:18:04:18:SJ cbx_altdpram 2018:04:24:18:04:18:SJ cbx_altera_counter 2018:04:24:18:04:18:SJ cbx_altera_gray_counter 2018:04:24:18:04:18:SJ cbx_altera_syncram 2018:04:24:18:04:18:SJ cbx_altera_syncram_nd_impl 2018:04:24:18:04:18:SJ cbx_altsyncram 2018:04:24:18:04:18:SJ cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_dcfifo 2018:04:24:18:04:18:SJ cbx_fifo_common 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_counter 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_lpm_mux 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_scfifo 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_stratixiii 2018:04:24:18:04:18:SJ cbx_stratixv 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION a_gray2bin_6ib (gray[9..0])
RETURNS ( bin[9..0]);
FUNCTION a_graycounter_2p6 (clock, cnt_en)
RETURNS ( q[9..0]);
FUNCTION a_graycounter_v6c (clock, cnt_en)
RETURNS ( q[9..0]);
FUNCTION altsyncram_3011 (address_a[8..0], address_b[10..0], addressstall_b, clock0, clock1, clocken1, data_a[31..0], wren_a)
RETURNS ( q_b[7..0]);
FUNCTION dffpipe_b09 (clock, d[11..0])
RETURNS ( q[11..0]);
FUNCTION dffpipe_909 (clock, d[9..0])
RETURNS ( q[9..0]);
FUNCTION alt_synch_pipe_ral (clock, d[9..0])
RETURNS ( q[9..0]);
FUNCTION alt_synch_pipe_sal (clock, d[9..0])
RETURNS ( q[9..0]);
FUNCTION cmpr_n76 (dataa[9..0], datab[9..0])
RETURNS ( aeb);
FUNCTION cmpr_p76 (dataa[11..0], datab[11..0])
RETURNS ( aeb);
FUNCTION cntr_pld (clock, cnt_en)
RETURNS ( cout, q[1..0]);

--synthesis_resources = lut 13 M9K 2 reg 100 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 2;{-to wrptr_g} suppress_da_rule_internal=S102;-name CUT ON -from rdptr_g -to ws_dgrp|dffpipe_e09:dffpipe15|dffe16a;-name SDC_STATEMENT ""set_false_path -from *rdptr_g* -to *ws_dgrp|dffpipe_e09:dffpipe15|dffe16a* "";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe_d09:dffpipe12|dffe13a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_d09:dffpipe12|dffe13a* """;

SUBDESIGN dcfifo_j4h1
( 
	aclr	:	input;
	data[31..0]	:	input;
	q[7..0]	:	output;
	rdclk	:	input;
	rdfull	:	output;
	rdreq	:	input;
	rdusedw[10..0]	:	output;
	wrclk	:	input;
	wrfull	:	output;
	wrreq	:	input;
) 
VARIABLE 
	rdptr_g_gray2bin : a_gray2bin_6ib;
	rs_dgwp_gray2bin : a_gray2bin_6ib;
	rdptr_g1p : a_graycounter_2p6;
	wrptr_g1p : a_graycounter_v6c;
	fifo_ram : altsyncram_3011;
	delayed_wrptr_g[9..0] : dffe;
	rdptr_b[1..0] : dffe;
	rdptr_g[9..0] : dffe;
	wrptr_g[9..0] : dffe;
	rs_brp : dffpipe_b09;
	rs_bwp : dffpipe_909;
	rs_dgwp : alt_synch_pipe_ral;
	ws_dgrp : alt_synch_pipe_sal;
	rdusedw_sub_dataa[11..0]	:	WIRE;
	rdusedw_sub_datab[11..0]	:	WIRE;
	rdusedw_sub_result[11..0]	:	WIRE;
	rdempty_eq_comp : cmpr_n76;
	rdfull_eq_comp : cmpr_p76;
	wrfull_eq_comp : cmpr_n76;
	cntr_b : cntr_pld;
	const_node_aclr	: NODE;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[8..0]	: WIRE;
	ram_address_b[10..0]	: WIRE;
	rdptr_gs[9..0]	: WIRE;
	rs_brp_reg_data[11..0]	: WIRE;
	temp_rdfull_eq_comp_a[11..0]	: WIRE;
	temp_rdfull_eq_comp_b[11..0]	: WIRE;
	temp_rdusedw_sub_data[11..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_gs[9..0]	: WIRE;

BEGIN 
	rdptr_g_gray2bin.gray[] = rdptr_g[].q;
	rs_dgwp_gray2bin.gray[] = rs_dgwp.q[];
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = (valid_rdreq & cntr_b.cout);
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = valid_wrreq;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! valid_rdreq);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.clocken1 = valid_rdreq;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].d = wrptr_g[].q;
	rdptr_b[].clk = rdclk;
	rdptr_b[].d = cntr_b.q[];
	rdptr_b[].ena = valid_rdreq;
	rdptr_g[].clk = rdclk;
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	wrptr_g[].clk = wrclk;
	wrptr_g[].d = wrptr_g1p.q[];
	wrptr_g[].ena = valid_wrreq;
	rs_brp.clock = rdclk;
	rs_brp.d[] = rs_brp_reg_data[];
	rs_bwp.clock = rdclk;
	rs_bwp.d[] = rs_dgwp_gray2bin.bin[];
	rs_dgwp.clock = rdclk;
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_dgrp.clock = wrclk;
	ws_dgrp.d[] = rdptr_g[].q;
	rdusedw_sub_result[] = rdusedw_sub_dataa[] - rdusedw_sub_datab[];
	rdusedw_sub_dataa[] = temp_rdusedw_sub_data[];
	rdusedw_sub_datab[] = rs_brp.q[];
	rdempty_eq_comp.dataa[] = rs_dgwp.q[];
	rdempty_eq_comp.datab[] = rdptr_g[].q;
	rdfull_eq_comp.dataa[] = temp_rdfull_eq_comp_a[];
	rdfull_eq_comp.datab[] = temp_rdfull_eq_comp_b[];
	wrfull_eq_comp.dataa[] = ws_dgrp.q[];
	wrfull_eq_comp.datab[] = wrptr_gs[];
	cntr_b.clock = rdclk;
	cntr_b.cnt_en = valid_rdreq;
	const_node_aclr = aclr;
	int_rdempty = rdempty_eq_comp.aeb;
	int_wrfull = wrfull_eq_comp.aeb;
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_g[9..9].q $ wrptr_g[8..8].q), wrptr_g[7..0].q);
	ram_address_b[] = ( (rdptr_g1p.q[9..9] $ rdptr_g1p.q[8..8]), rdptr_g1p.q[7..0], cntr_b.q[]);
	rdfull = rdfull_eq_comp.aeb;
	rdptr_gs[] = ( (! rdptr_g[9..9].q), (! rdptr_g[8..8].q), rdptr_g[7..0].q);
	rdusedw[] = ( rdusedw_sub_result[10..0]);
	rs_brp_reg_data[] = ( rdptr_g_gray2bin.bin[], rdptr_b[].q);
	temp_rdfull_eq_comp_a[] = ( rs_dgwp.q[], B"00");
	temp_rdfull_eq_comp_b[] = ( rdptr_gs[], rdptr_b[].q);
	temp_rdusedw_sub_data[] = ( rs_bwp.q[], B"00");
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! int_wrfull));
	wrfull = int_wrfull;
	wrptr_gs[] = ( (! wrptr_g[9..9].q), (! wrptr_g[8..8].q), wrptr_g[7..0].q);
END;
--VALID FILE
