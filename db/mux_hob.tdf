--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=2 LPM_WIDTH=24 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 18.0 cbx_lpm_mux 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 24 
SUBDESIGN mux_hob
( 
	data[47..0]	:	input;
	result[23..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[23..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data100w[1..0]	: WIRE;
	w_data112w[1..0]	: WIRE;
	w_data124w[1..0]	: WIRE;
	w_data136w[1..0]	: WIRE;
	w_data148w[1..0]	: WIRE;
	w_data14w[1..0]	: WIRE;
	w_data160w[1..0]	: WIRE;
	w_data172w[1..0]	: WIRE;
	w_data184w[1..0]	: WIRE;
	w_data196w[1..0]	: WIRE;
	w_data208w[1..0]	: WIRE;
	w_data220w[1..0]	: WIRE;
	w_data232w[1..0]	: WIRE;
	w_data244w[1..0]	: WIRE;
	w_data256w[1..0]	: WIRE;
	w_data268w[1..0]	: WIRE;
	w_data280w[1..0]	: WIRE;
	w_data28w[1..0]	: WIRE;
	w_data292w[1..0]	: WIRE;
	w_data40w[1..0]	: WIRE;
	w_data52w[1..0]	: WIRE;
	w_data64w[1..0]	: WIRE;
	w_data76w[1..0]	: WIRE;
	w_data88w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data292w[1..1]) # ((! sel_node[]) & w_data292w[0..0])), ((sel_node[] & w_data280w[1..1]) # ((! sel_node[]) & w_data280w[0..0])), ((sel_node[] & w_data268w[1..1]) # ((! sel_node[]) & w_data268w[0..0])), ((sel_node[] & w_data256w[1..1]) # ((! sel_node[]) & w_data256w[0..0])), ((sel_node[] & w_data244w[1..1]) # ((! sel_node[]) & w_data244w[0..0])), ((sel_node[] & w_data232w[1..1]) # ((! sel_node[]) & w_data232w[0..0])), ((sel_node[] & w_data220w[1..1]) # ((! sel_node[]) & w_data220w[0..0])), ((sel_node[] & w_data208w[1..1]) # ((! sel_node[]) & w_data208w[0..0])), ((sel_node[] & w_data196w[1..1]) # ((! sel_node[]) & w_data196w[0..0])), ((sel_node[] & w_data184w[1..1]) # ((! sel_node[]) & w_data184w[0..0])), ((sel_node[] & w_data172w[1..1]) # ((! sel_node[]) & w_data172w[0..0])), ((sel_node[] & w_data160w[1..1]) # ((! sel_node[]) & w_data160w[0..0])), ((sel_node[] & w_data148w[1..1]) # ((! sel_node[]) & w_data148w[0..0])), ((sel_node[] & w_data136w[1..1]) # ((! sel_node[]) & w_data136w[0..0])), ((sel_node[] & w_data124w[1..1]) # ((! sel_node[]) & w_data124w[0..0])), ((sel_node[] & w_data112w[1..1]) # ((! sel_node[]) & w_data112w[0..0])), ((sel_node[] & w_data100w[1..1]) # ((! sel_node[]) & w_data100w[0..0])), ((sel_node[] & w_data88w[1..1]) # ((! sel_node[]) & w_data88w[0..0])), ((sel_node[] & w_data76w[1..1]) # ((! sel_node[]) & w_data76w[0..0])), ((sel_node[] & w_data64w[1..1]) # ((! sel_node[]) & w_data64w[0..0])), ((sel_node[] & w_data52w[1..1]) # ((! sel_node[]) & w_data52w[0..0])), ((sel_node[] & w_data40w[1..1]) # ((! sel_node[]) & w_data40w[0..0])), ((sel_node[] & w_data28w[1..1]) # ((! sel_node[]) & w_data28w[0..0])), ((sel_node[] & w_data14w[1..1]) # ((! sel_node[]) & w_data14w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data100w[] = ( data[31..31], data[7..7]);
	w_data112w[] = ( data[32..32], data[8..8]);
	w_data124w[] = ( data[33..33], data[9..9]);
	w_data136w[] = ( data[34..34], data[10..10]);
	w_data148w[] = ( data[35..35], data[11..11]);
	w_data14w[] = ( data[24..24], data[0..0]);
	w_data160w[] = ( data[36..36], data[12..12]);
	w_data172w[] = ( data[37..37], data[13..13]);
	w_data184w[] = ( data[38..38], data[14..14]);
	w_data196w[] = ( data[39..39], data[15..15]);
	w_data208w[] = ( data[40..40], data[16..16]);
	w_data220w[] = ( data[41..41], data[17..17]);
	w_data232w[] = ( data[42..42], data[18..18]);
	w_data244w[] = ( data[43..43], data[19..19]);
	w_data256w[] = ( data[44..44], data[20..20]);
	w_data268w[] = ( data[45..45], data[21..21]);
	w_data280w[] = ( data[46..46], data[22..22]);
	w_data28w[] = ( data[25..25], data[1..1]);
	w_data292w[] = ( data[47..47], data[23..23]);
	w_data40w[] = ( data[26..26], data[2..2]);
	w_data52w[] = ( data[27..27], data[3..3]);
	w_data64w[] = ( data[28..28], data[4..4]);
	w_data76w[] = ( data[29..29], data[5..5]);
	w_data88w[] = ( data[30..30], data[6..6]);
END;
--VALID FILE
