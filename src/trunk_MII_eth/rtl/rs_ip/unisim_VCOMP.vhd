--**************************************************************
--  Copyright (c) 2011 Xilinx, Inc.  All rights reserved.
--  File Name    : unisim_VCOMP.vhd
--  Library      : unisim
--  Release      : 11.1
--  Entity Count : 1167
--  Time         : Thu May 26 13:31:57 2016
--  Generated by : gencomp.pl
--**************************************************************

library IEEE;
use IEEE.STD_LOGIC_1164.all;
package VCOMPONENTS is
attribute BOX_TYPE : string;


-- synopsys translate_off

-----------------------------------------
-----------   FPGA Globals --------------
-----------------------------------------
signal GSR : std_logic := '0';
signal GTS : std_logic := '0';
signal GWE : std_logic;
signal PLL_LOCKG : std_logic := 'H';
signal PROGB_GLBL : std_logic;
signal CCLKO_GLBL : std_logic;

-----------------------------------------
-----------   CPLD Globals --------------
-----------------------------------------
signal PRLD : std_logic := '0';

-----------------------------------------
-----------   JTAG Globals --------------
-----------------------------------------
signal JTAG_TDO_GLBL  : std_logic;
signal JTAG_TDI_GLBL  : std_logic;
signal JTAG_TMS_GLBL  : std_logic;
signal JTAG_TCK_GLBL  : std_logic;
signal JTAG_TRST_GLBL : std_logic;

signal JTAG_CAPTURE_GLBL : std_logic;
signal JTAG_RESET_GLBL : std_logic;
signal JTAG_SHIFT_GLBL : std_logic;
signal JTAG_UPDATE_GLBL : std_logic;
signal JTAG_RUNTEST_GLBL : std_logic;

signal JTAG_SEL1_GLBL : std_logic := '0';
signal JTAG_SEL2_GLBL : std_logic := '0';
signal JTAG_SEL3_GLBL : std_logic := '0';
signal JTAG_SEL4_GLBL : std_logic := '0';

signal JTAG_USER_TDO1_GLBL : std_logic := 'Z';
signal JTAG_USER_TDO2_GLBL : std_logic := 'Z';
signal JTAG_USER_TDO3_GLBL : std_logic := 'Z';
signal JTAG_USER_TDO4_GLBL : std_logic := 'Z';

-- synopsys translate_on

-- START COMPONENT
----- component DSP48 -----
component DSP48
  generic (
     AREG : integer := 1;
     BREG : integer := 1;
     B_INPUT : string := "DIRECT";
     CARRYINREG : integer := 1;
     CARRYINSELREG : integer := 1;
     CREG : integer := 1;
     LEGACY_MODE : string := "MULT18X18S";
     MREG : integer := 1;
     OPMODEREG : integer := 1;
     PREG : integer := 1;
     SUBTRACTREG : integer := 1
  );
  port (
     BCOUT : out std_logic_vector(17 downto 0);
     P : out std_logic_vector(47 downto 0);
     PCOUT : out std_logic_vector(47 downto 0);
     A : in std_logic_vector(17 downto 0);
     B : in std_logic_vector(17 downto 0);
     BCIN : in std_logic_vector(17 downto 0);
     C : in std_logic_vector(47 downto 0);
     CARRYIN : in std_ulogic;
     CARRYINSEL : in std_logic_vector(1 downto 0);
     CEA : in std_ulogic;
     CEB : in std_ulogic;
     CEC : in std_ulogic;
     CECARRYIN : in std_ulogic;
     CECINSUB : in std_ulogic;
     CECTRL : in std_ulogic;
     CEM : in std_ulogic;
     CEP : in std_ulogic;
     CLK : in std_ulogic;
     OPMODE : in std_logic_vector(6 downto 0);
     PCIN : in std_logic_vector(47 downto 0);
     RSTA : in std_ulogic;
     RSTB : in std_ulogic;
     RSTC : in std_ulogic;
     RSTCARRYIN : in std_ulogic;
     RSTCTRL : in std_ulogic;
     RSTM : in std_ulogic;
     RSTP : in std_ulogic;
     SUBTRACT : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  DSP48 : component is "PRIMITIVE";

----- component DSP48A -----
component DSP48A
  generic (
     A0REG : integer := 0;
     A1REG : integer := 1;
     B0REG : integer := 0;
     B1REG : integer := 1;
     CARRYINREG : integer := 1;
     CARRYINSEL : string := "CARRYIN";
     CREG : integer := 1;
     DREG : integer := 1;
     MREG : integer := 1;
     OPMODEREG : integer := 1;
     PREG : integer := 1;
     RSTTYPE : string := "SYNC"
  );
  port (
     BCOUT : out std_logic_vector(17 downto 0);
     CARRYOUT : out std_ulogic;
     P : out std_logic_vector(47 downto 0);
     PCOUT : out std_logic_vector(47 downto 0);
     A : in std_logic_vector(17 downto 0);
     B : in std_logic_vector(17 downto 0);
     C : in std_logic_vector(47 downto 0);
     CARRYIN : in std_ulogic;
     CEA : in std_ulogic;
     CEB : in std_ulogic;
     CEC : in std_ulogic;
     CECARRYIN : in std_ulogic;
     CED : in std_ulogic;
     CEM : in std_ulogic;
     CEOPMODE : in std_ulogic;
     CEP : in std_ulogic;
     CLK : in std_ulogic;
     D : in std_logic_vector(17 downto 0);
     OPMODE : in std_logic_vector(7 downto 0);
     PCIN : in std_logic_vector(47 downto 0);
     RSTA : in std_ulogic;
     RSTB : in std_ulogic;
     RSTC : in std_ulogic;
     RSTCARRYIN : in std_ulogic;
     RSTD : in std_ulogic;
     RSTM : in std_ulogic;
     RSTOPMODE : in std_ulogic;
     RSTP : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  DSP48A : component is "PRIMITIVE";

----- component DSP48A1 -----
component DSP48A1
  generic (
     A0REG : integer := 0;
     A1REG : integer := 1;
     B0REG : integer := 0;
     B1REG : integer := 1;
     CARRYINREG : integer := 1;
     CARRYINSEL : string := "OPMODE5";
     CARRYOUTREG : integer := 1;
     CREG : integer := 1;
     DREG : integer := 1;
     MREG : integer := 1;
     OPMODEREG : integer := 1;
     PREG : integer := 1;
     RSTTYPE : string := "SYNC"
  );
  port (
     BCOUT : out std_logic_vector(17 downto 0);
     CARRYOUT : out std_ulogic;
     CARRYOUTF : out std_ulogic;
     M : out std_logic_vector(35 downto 0);
     P : out std_logic_vector(47 downto 0);
     PCOUT : out std_logic_vector(47 downto 0);
     A : in std_logic_vector(17 downto 0);
     B : in std_logic_vector(17 downto 0);
     C : in std_logic_vector(47 downto 0);
     CARRYIN : in std_ulogic := 'L';
     CEA : in std_ulogic;
     CEB : in std_ulogic;
     CEC : in std_ulogic;
     CECARRYIN : in std_ulogic;
     CED : in std_ulogic;
     CEM : in std_ulogic;
     CEOPMODE : in std_ulogic;
     CEP : in std_ulogic;
     CLK : in std_ulogic;
     D : in std_logic_vector(17 downto 0);
     OPMODE : in std_logic_vector(7 downto 0);
     PCIN : in std_logic_vector(47 downto 0) := (others => 'L');
     RSTA : in std_ulogic;
     RSTB : in std_ulogic;
     RSTC : in std_ulogic;
     RSTCARRYIN : in std_ulogic;
     RSTD : in std_ulogic;
     RSTM : in std_ulogic;
     RSTOPMODE : in std_ulogic;
     RSTP : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  DSP48A1 : component is "PRIMITIVE";


----- component DSP48E -----
component DSP48E
  generic (
     ACASCREG : integer := 1;
     ALUMODEREG : integer := 1;
     AREG : integer := 1;
     AUTORESET_PATTERN_DETECT : boolean := FALSE;
     AUTORESET_PATTERN_DETECT_OPTINV : string := "MATCH";
     A_INPUT : string := "DIRECT";
     BCASCREG : integer := 1;
     BREG : integer := 1;
     B_INPUT : string := "DIRECT";
     CARRYINREG : integer := 1;
     CARRYINSELREG : integer := 1;
     CREG : integer := 1;
     MASK : bit_vector := X"3FFFFFFFFFFF";
     MREG : integer := 1;
     MULTCARRYINREG : integer := 1;
     OPMODEREG : integer := 1;
     PATTERN : bit_vector := X"000000000000";
     PREG : integer := 1;
     SEL_MASK : string := "MASK";
     SEL_PATTERN : string := "PATTERN";
     SEL_ROUNDING_MASK : string := "SEL_MASK";
     SIM_MODE : string := "SAFE";
     USE_MULT : string := "MULT_S";
     USE_PATTERN_DETECT : string := "NO_PATDET";
     USE_SIMD : string := "ONE48"
  );
  port (
     ACOUT : out std_logic_vector(29 downto 0);
     BCOUT : out std_logic_vector(17 downto 0);
     CARRYCASCOUT : out std_ulogic;
     CARRYOUT : out std_logic_vector(3 downto 0);
     MULTSIGNOUT : out std_ulogic;
     OVERFLOW : out std_ulogic;
     P : out std_logic_vector(47 downto 0);
     PATTERNBDETECT : out std_ulogic;
     PATTERNDETECT : out std_ulogic;
     PCOUT : out std_logic_vector(47 downto 0);
     UNDERFLOW : out std_ulogic;
     A : in std_logic_vector(29 downto 0);
     ACIN : in std_logic_vector(29 downto 0);
     ALUMODE : in std_logic_vector(3 downto 0);
     B : in std_logic_vector(17 downto 0);
     BCIN : in std_logic_vector(17 downto 0);
     C : in std_logic_vector(47 downto 0);
     CARRYCASCIN : in std_ulogic;
     CARRYIN : in std_ulogic;
     CARRYINSEL : in std_logic_vector(2 downto 0);
     CEA1 : in std_ulogic;
     CEA2 : in std_ulogic;
     CEALUMODE : in std_ulogic;
     CEB1 : in std_ulogic;
     CEB2 : in std_ulogic;
     CEC : in std_ulogic;
     CECARRYIN : in std_ulogic;
     CECTRL : in std_ulogic;
     CEM : in std_ulogic;
     CEMULTCARRYIN : in std_ulogic;
     CEP : in std_ulogic;
     CLK : in std_ulogic;
     MULTSIGNIN : in std_ulogic;
     OPMODE : in std_logic_vector(6 downto 0);
     PCIN : in std_logic_vector(47 downto 0);
     RSTA : in std_ulogic;
     RSTALLCARRYIN : in std_ulogic;
     RSTALUMODE : in std_ulogic;
     RSTB : in std_ulogic;
     RSTC : in std_ulogic;
     RSTCTRL : in std_ulogic;
     RSTM : in std_ulogic;
     RSTP : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  DSP48E : component is "PRIMITIVE";
----- component DSP48E1 -----
component DSP48E1
  generic (
     ACASCREG : integer := 1;
     ADREG : integer := 1;
     ALUMODEREG : integer := 1;
     AREG : integer := 1;
     AUTORESET_PATDET : string := "NO_RESET";
     A_INPUT : string := "DIRECT";
     BCASCREG : integer := 1;
     BREG : integer := 1;
     B_INPUT : string := "DIRECT";
     CARRYINREG : integer := 1;
     CARRYINSELREG : integer := 1;
     CREG : integer := 1;
     DREG : integer := 1;
     INMODEREG : integer := 1;
     MASK : bit_vector := X"3FFFFFFFFFFF";
     MREG : integer := 1;
     OPMODEREG : integer := 1;
     PATTERN : bit_vector := X"000000000000";
     PREG : integer := 1;
     SEL_MASK : string := "MASK";
     SEL_PATTERN : string := "PATTERN";
     USE_DPORT : boolean := FALSE;
     USE_MULT : string := "MULTIPLY";
     USE_PATTERN_DETECT : string := "NO_PATDET";
     USE_SIMD : string := "ONE48"
  );
  port (
     ACOUT : out std_logic_vector(29 downto 0);
     BCOUT : out std_logic_vector(17 downto 0);
     CARRYCASCOUT : out std_ulogic;
     CARRYOUT : out std_logic_vector(3 downto 0);
     MULTSIGNOUT : out std_ulogic;
     OVERFLOW : out std_ulogic;
     P : out std_logic_vector(47 downto 0);
     PATTERNBDETECT : out std_ulogic;
     PATTERNDETECT : out std_ulogic;
     PCOUT : out std_logic_vector(47 downto 0);
     UNDERFLOW : out std_ulogic;
     A : in std_logic_vector(29 downto 0);
     ACIN : in std_logic_vector(29 downto 0);
     ALUMODE : in std_logic_vector(3 downto 0);
     B : in std_logic_vector(17 downto 0);
     BCIN : in std_logic_vector(17 downto 0);
     C : in std_logic_vector(47 downto 0);
     CARRYCASCIN : in std_ulogic;
     CARRYIN : in std_ulogic;
     CARRYINSEL : in std_logic_vector(2 downto 0);
     CEA1 : in std_ulogic;
     CEA2 : in std_ulogic;
     CEAD : in std_ulogic;
     CEALUMODE : in std_ulogic;
     CEB1 : in std_ulogic;
     CEB2 : in std_ulogic;
     CEC : in std_ulogic;
     CECARRYIN : in std_ulogic;
     CECTRL : in std_ulogic;
     CED : in std_ulogic;
     CEINMODE : in std_ulogic;
     CEM : in std_ulogic;
     CEP : in std_ulogic;
     CLK : in std_ulogic;
     D : in std_logic_vector(24 downto 0);
     INMODE : in std_logic_vector(4 downto 0);
     MULTSIGNIN : in std_ulogic;
     OPMODE : in std_logic_vector(6 downto 0);
     PCIN : in std_logic_vector(47 downto 0);
     RSTA : in std_ulogic;
     RSTALLCARRYIN : in std_ulogic;
     RSTALUMODE : in std_ulogic;
     RSTB : in std_ulogic;
     RSTC : in std_ulogic;
     RSTCTRL : in std_ulogic;
     RSTD : in std_ulogic;
     RSTINMODE : in std_ulogic;
     RSTM : in std_ulogic;
     RSTP : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  DSP48E1 : component is "PRIMITIVE";

----- component DSP48E2 -----
component DSP48E2
  generic (
     ACASCREG : integer := 1;
     ADREG : integer := 1;
     ALUMODEREG : integer := 1;
     AMULTSEL : string := "A";
     AREG : integer := 1;
     AUTORESET_PATDET : string := "NO_RESET";
     AUTORESET_PRIORITY : string := "RESET";
     A_INPUT : string := "DIRECT";
     BCASCREG : integer := 1;
     BMULTSEL : string := "B";
     BREG : integer := 1;
     B_INPUT : string := "DIRECT";
     CARRYINREG : integer := 1;
     CARRYINSELREG : integer := 1;
     CREG : integer := 1;
     DREG : integer := 1;
     INMODEREG : integer := 1;
     IS_ALUMODE_INVERTED : std_logic_vector(3 downto 0) := "0000";
     IS_CARRYIN_INVERTED : bit := '0';
     IS_CLK_INVERTED : bit := '0';
     IS_INMODE_INVERTED : std_logic_vector(4 downto 0) := "00000";
     IS_OPMODE_INVERTED : std_logic_vector(8 downto 0) := "000000000";
     IS_RSTALLCARRYIN_INVERTED : bit := '0';
     IS_RSTALUMODE_INVERTED : bit := '0';
     IS_RSTA_INVERTED : bit := '0';
     IS_RSTB_INVERTED : bit := '0';
     IS_RSTCTRL_INVERTED : bit := '0';
     IS_RSTC_INVERTED : bit := '0';
     IS_RSTD_INVERTED : bit := '0';
     IS_RSTINMODE_INVERTED : bit := '0';
     IS_RSTM_INVERTED : bit := '0';
     IS_RSTP_INVERTED : bit := '0';
     MASK : std_logic_vector(47 downto 0) := X"3FFFFFFFFFFF";
     MREG : integer := 1;
     OPMODEREG : integer := 1;
     PATTERN : std_logic_vector(47 downto 0) := X"000000000000";
     PREADDINSEL : string := "A";
     PREG : integer := 1;
     RND : std_logic_vector(47 downto 0) := X"000000000000";
     SEL_MASK : string := "MASK";
     SEL_PATTERN : string := "PATTERN";
     USE_MULT : string := "MULTIPLY";
     USE_PATTERN_DETECT : string := "NO_PATDET";
     USE_SIMD : string := "ONE48";
     USE_WIDEXOR : string := "FALSE";
     XORSIMD : string := "XOR24_48_96"
  );
  port (
     ACOUT : out std_logic_vector(29 downto 0);
     BCOUT : out std_logic_vector(17 downto 0);
     CARRYCASCOUT : out std_ulogic;
     CARRYOUT : out std_logic_vector(3 downto 0);
     MULTSIGNOUT : out std_ulogic;
     OVERFLOW : out std_ulogic;
     P : out std_logic_vector(47 downto 0);
     PATTERNBDETECT : out std_ulogic;
     PATTERNDETECT : out std_ulogic;
     PCOUT : out std_logic_vector(47 downto 0);
     UNDERFLOW : out std_ulogic;
     XOROUT : out std_logic_vector(7 downto 0);
     A : in std_logic_vector(29 downto 0);
     ACIN : in std_logic_vector(29 downto 0);
     ALUMODE : in std_logic_vector(3 downto 0);
     B : in std_logic_vector(17 downto 0);
     BCIN : in std_logic_vector(17 downto 0);
     C : in std_logic_vector(47 downto 0);
     CARRYCASCIN : in std_ulogic;
     CARRYIN : in std_ulogic;
     CARRYINSEL : in std_logic_vector(2 downto 0);
     CEA1 : in std_ulogic;
     CEA2 : in std_ulogic;
     CEAD : in std_ulogic;
     CEALUMODE : in std_ulogic;
     CEB1 : in std_ulogic;
     CEB2 : in std_ulogic;
     CEC : in std_ulogic;
     CECARRYIN : in std_ulogic;
     CECTRL : in std_ulogic;
     CED : in std_ulogic;
     CEINMODE : in std_ulogic;
     CEM : in std_ulogic;
     CEP : in std_ulogic;
     CLK : in std_ulogic;
     D : in std_logic_vector(26 downto 0);
     INMODE : in std_logic_vector(4 downto 0);
     MULTSIGNIN : in std_ulogic;
     OPMODE : in std_logic_vector(8 downto 0);
     PCIN : in std_logic_vector(47 downto 0);
     RSTA : in std_ulogic;
     RSTALLCARRYIN : in std_ulogic;
     RSTALUMODE : in std_ulogic;
     RSTB : in std_ulogic;
     RSTC : in std_ulogic;
     RSTCTRL : in std_ulogic;
     RSTD : in std_ulogic;
     RSTINMODE : in std_ulogic;
     RSTM : in std_ulogic;
     RSTP : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  DSP48E2 : component is "PRIMITIVE";

----- component MUXCY -----
component MUXCY
  port (
     O : out std_ulogic;
     CI : in std_ulogic;
     DI : in std_ulogic;
     S : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  MUXCY : component is "PRIMITIVE";


----- component XORCY -----
component XORCY
  port (
     O : out std_ulogic;
     CI : in std_ulogic;
     LI : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  XORCY : component is "PRIMITIVE";


----- component LUT1 -----
component LUT1
  generic (
     INIT : bit_vector := X"0"
  );
  port (
     O : out std_ulogic;
     I0 : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  LUT1 : component is "PRIMITIVE";

----- component LUT2 -----
component LUT2
  generic (
     INIT : bit_vector := X"0"
  );
  port (
     O : out std_ulogic;
     I0 : in std_ulogic;
     I1 : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  LUT2 : component is "PRIMITIVE";

----- component LUT3 -----
component LUT3
  generic (
     INIT : bit_vector := X"00"
  );
  port (
     O : out std_ulogic;
     I0 : in std_ulogic;
     I1 : in std_ulogic;
     I2 : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  LUT3 : component is "PRIMITIVE";

----- component LUT4 -----
component LUT4
  generic (
     INIT : bit_vector := X"0000"
  );
  port (
     O : out std_ulogic;
     I0 : in std_ulogic;
     I1 : in std_ulogic;
     I2 : in std_ulogic;
     I3 : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  LUT4 : component is "PRIMITIVE";

----- component MULT_AND -----
component MULT_AND
  port (
     LO : out std_ulogic;
     I0 : in std_ulogic;
     I1 : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  MULT_AND : component is "PRIMITIVE";


----- component MUXCY_L -----
component MUXCY_L
  port (
     LO : out std_ulogic;
     CI : in std_ulogic;
     DI : in std_ulogic;
     S : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  MUXCY_L : component is "PRIMITIVE";

----- component MUXF5 -----
component MUXF5
  port (
     O : out std_ulogic;
     I0 : in std_ulogic;
     I1 : in std_ulogic;
     S : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  MUXF5 : component is "PRIMITIVE";

----- component MUXF6 -----
component MUXF6
  port (
     O : out std_ulogic;
     I0 : in std_ulogic;
     I1 : in std_ulogic;
     S : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  MUXF6 : component is "PRIMITIVE";

----- component MUXF7 -----
component MUXF7
  port (
     O : out std_ulogic;
     I0 : in std_ulogic;
     I1 : in std_ulogic;
     S : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  MUXF7 : component is "PRIMITIVE";

----- component MUXF8 -----
component MUXF8
  port (
     O : out std_ulogic;
     I0 : in std_ulogic;
     I1 : in std_ulogic;
     S : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  MUXF8 : component is "PRIMITIVE";

----- component SRL16E -----
component SRL16E
  generic (
     INIT : bit_vector := X"0000"
  );
  port (
     Q : out STD_ULOGIC;
     A0 : in STD_ULOGIC;
     A1 : in STD_ULOGIC;
     A2 : in STD_ULOGIC;
     A3 : in STD_ULOGIC;
     CE : in STD_ULOGIC;
     CLK : in STD_ULOGIC;
     D : in STD_ULOGIC
  );
end component;
attribute BOX_TYPE of
  SRL16E : component is "PRIMITIVE";

----- component SRLC16E -----
component SRLC16E
  generic (
     INIT : bit_vector := X"0000"
  );
  port (
     Q : out STD_ULOGIC;
     Q15 : out STD_ULOGIC;
     A0 : in STD_ULOGIC;
     A1 : in STD_ULOGIC;
     A2 : in STD_ULOGIC;
     A3 : in STD_ULOGIC;
     CE : in STD_ULOGIC;
     CLK : in STD_ULOGIC;
     D : in STD_ULOGIC
  );
end component;
attribute BOX_TYPE of
  SRLC16E : component is "PRIMITIVE";

----- component SRLC32E -----
component SRLC32E
  generic (
     INIT : bit_vector := X"00000000"
  );
  port (
     Q : out STD_ULOGIC;
     Q31 : out STD_ULOGIC;
     A : in STD_LOGIC_VECTOR (4 downto 0);
     CE : in STD_ULOGIC;
     CLK : in STD_ULOGIC;
     D : in STD_ULOGIC
  );
end component;
attribute BOX_TYPE of
  SRLC32E : component is "PRIMITIVE";

----- component FDCE -----
component FDCE
  generic (
     INIT : bit := '0'
  );
  port (
     Q : out std_ulogic;
     C : in std_ulogic;
     CE : in std_ulogic;
     CLR : in std_ulogic;
     D : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  FDCE : component is "PRIMITIVE";

----- component FDPE -----
component FDPE
  generic (
     INIT : bit := '1'
  );
  port (
     Q : out std_ulogic;
     C : in std_ulogic;
     CE : in std_ulogic;
     D : in std_ulogic;
     PRE : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  FDPE : component is "PRIMITIVE";


----- component FDE -----
component FDE
  generic (
     INIT : bit := '0'
  );
  port (
     Q : out std_ulogic;
     C : in std_ulogic;
     CE : in std_ulogic;
     D : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  FDE : component is "PRIMITIVE";

----- component BUF -----
component BUF
  port (
     O : out std_ulogic;
     I : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  BUF : component is "PRIMITIVE";

-- END COMPONENT

----- component FDRE -----
component FDRE
  generic (
     INIT : bit := '0'
  );
  port (
     Q : out std_ulogic;
     C : in std_ulogic;
     CE : in std_ulogic;
     D : in std_ulogic;
     R : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  FDRE : component is "PRIMITIVE";


----- component RAM64X1S -----
component RAM64X1S
  generic (
     INIT : bit_vector(63 downto 0) := X"0000000000000000"
  );
  port (
     O : out std_ulogic;
     A0 : in std_ulogic;
     A1 : in std_ulogic;
     A2 : in std_ulogic;
     A3 : in std_ulogic;
     A4 : in std_ulogic;
     A5 : in std_ulogic;
     D : in std_ulogic;
     WCLK : in std_ulogic;
     WE : in std_ulogic
  );
end component;
attribute BOX_TYPE of
  RAM64X1S : component is "PRIMITIVE";





end VCOMPONENTS;
